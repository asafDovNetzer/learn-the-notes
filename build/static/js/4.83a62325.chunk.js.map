{"version":3,"sources":["Containers/Settings/Settings.module.css","Components/UI/Switch/Switch.module.css","Components/UI/DeleteButton/DeleteButton.module.css","Components/UI/Switch/Switch.js","Components/UI/DeleteButton/DeleteButton.js","Containers/Settings/Settings.js"],"names":["module","exports","switchBox","props","className","classes","SwitchBox","Label","symbolType","Switch","checked","onChange","handler","type","Slider","deleteButton","Button","activated","Active","join","onClick","Settings","state","buttonActivated","onDeleteMemory","onDelete","user","setState","onCheckboxChange","onChangeSymbol","onActivate","thisComponent","setTimeout","prevProps","this","onSaveGame","notesArray","answers","DeleteButton","Component","connect","cardGame","dispatch","actions"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,OAAS,uBAAuB,OAAS,yB,mBCA/HD,EAAOC,QAAU,CAAC,OAAS,6BAA6B,MAAQ,4BAA4B,OAAS,6BAA6B,KAAO,6B,2ICoB1HC,EAlBG,SAACC,GACjB,OACE,sBAAKC,UAAWC,IAAQC,UAAxB,UACE,oBAAIF,UAAWC,IAAQE,MAAvB,SACIJ,EAAMK,WAAP,0CAEH,wBAAOJ,UAAWC,IAAQI,OAA1B,UACE,uBACEC,QAASP,EAAMK,WACfG,SAAUR,EAAMS,QAChBC,KAAK,aAEP,sBAAMT,UAAWC,IAAQS,gB,iBCClBC,EAbM,SAACZ,GACpB,OACE,wBACEC,UAAW,CAACC,IAAQW,OAAQb,EAAMc,UAAYZ,IAAQa,OAAS,MAAMC,KAA1D,KAGXC,QAASjB,EAAMS,QAJjB,SAMGT,EAAMc,UAAN,+B,OCJDI,E,4MACJC,MAAQ,CACNC,iBAAiB,G,EAGnBC,eAAiB,WACf,EAAKrB,MAAMsB,SAAS,EAAKtB,MAAMuB,MAC/B,EAAKC,SAAS,CAAEJ,iBAAiB,K,EAGnCK,iBAAmB,WACjB,EAAKzB,MAAM0B,kB,EAEbC,WAAa,WACX,EAAKH,SAAS,CAAEJ,iBAAiB,IACjC,IAAMQ,EAAa,eACnBC,YAAW,WACTD,EAAcJ,SAAS,CAAEJ,iBAAiB,MACzC,O,wDAGL,SAAmBU,GACZC,KAAK/B,MAAMuB,MAEZO,EAAUzB,aAAe0B,KAAK/B,MAAMK,YACtC0B,KAAK/B,MAAMgC,WACTD,KAAK/B,MAAMiC,WACXF,KAAK/B,MAAMkC,QACXH,KAAK/B,MAAMK,WACX0B,KAAK/B,MAAMuB,Q,oBAKjB,WAAU,IAAD,OACP,OACE,sBAAKtB,UAAWC,IAAQgB,SAAxB,UACE,cAACZ,EAAD,CACED,WAAY0B,KAAK/B,MAAMK,WACvBI,QAAS,kBAAM,EAAKgB,sBAEtB,cAACU,EAAD,CACErB,UAAWiB,KAAKZ,MAAMC,gBACtBX,QACEsB,KAAKZ,MAAMC,gBAAkBW,KAAKV,eAAiBU,KAAKJ,oB,GA5C7CS,aAsERC,uBAlBS,SAAClB,GACvB,MAAO,CACLd,WAAYc,EAAMmB,SAASjC,WAC3B4B,WAAYd,EAAMmB,SAASL,WAC3BC,QAASf,EAAMmB,SAASJ,QACxBX,KAAMJ,EAAMmB,SAASf,SAIE,SAACgB,GAC1B,MAAO,CACLb,eAAgB,kBAAMa,EAASC,QAC/BlB,SAAU,SAACC,GAAD,OAAUgB,EAASC,IAA2BjB,KACxDS,WAAY,SAACC,EAAYC,EAAS7B,EAAYkB,GAAlC,OACVgB,EAASC,IAAmBP,EAAYC,EAAS7B,EAAYkB,QAIpDc,CAA6CnB","file":"static/js/4.83a62325.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Settings\":\"Settings_Settings__3sma7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SwitchBox\":\"Switch_SwitchBox__1E3EW\",\"Label\":\"Switch_Label__7mW1m\",\"Switch\":\"Switch_Switch__ZOcCf\",\"Slider\":\"Switch_Slider__qOWA0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"DeleteButton_Button__PdXsJ\",\"flip2\":\"DeleteButton_flip2__2bh4W\",\"Active\":\"DeleteButton_Active__2HwAn\",\"flip\":\"DeleteButton_flip__3J2Fh\"};","import React from \"react\";\r\nimport classes from \"./Switch.module.css\";\r\n\r\nconst switchBox = (props) => {\r\n  return (\r\n    <div className={classes.SwitchBox}>\r\n      <h1 className={classes.Label}>\r\n        {!props.symbolType ? `Do-Re-Mi-Fa-Sol-La-Si` : `A-B-C-D-E-F-G`}\r\n      </h1>\r\n      <label className={classes.Switch}>\r\n        <input\r\n          checked={props.symbolType}\r\n          onChange={props.handler}\r\n          type=\"checkbox\"\r\n        />\r\n        <span className={classes.Slider}></span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default switchBox;\r\n","import React from \"react\";\r\nimport classes from \"./DeleteButton.module.css\";\r\n\r\nconst deleteButton = (props) => {\r\n  return (\r\n    <button\r\n      className={[classes.Button, props.activated ? classes.Active : null].join(\r\n        ` `\r\n      )}\r\n      onClick={props.handler}\r\n    >\r\n      {props.activated ? `You Sure?` : `Delete Memory`}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default deleteButton;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./Settings.module.css\";\r\nimport Switch from \"../../Components/UI/Switch/Switch\";\r\nimport DeleteButton from \"../../Components/UI/DeleteButton/DeleteButton\";\r\nimport * as actions from \"../../Store/Actions/index\";\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    buttonActivated: false,\r\n  };\r\n\r\n  onDeleteMemory = () => {\r\n    this.props.onDelete(this.props.user);\r\n    this.setState({ buttonActivated: false });\r\n  };\r\n\r\n  onCheckboxChange = () => {\r\n    this.props.onChangeSymbol();\r\n  };\r\n  onActivate = () => {\r\n    this.setState({ buttonActivated: true });\r\n    const thisComponent = this;\r\n    setTimeout(function () {\r\n      thisComponent.setState({ buttonActivated: false });\r\n    }, 1500);\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (!this.props.user) return;\r\n\r\n    if (prevProps.symbolType !== this.props.symbolType) {\r\n      this.props.onSaveGame(\r\n        this.props.notesArray,\r\n        this.props.answers,\r\n        this.props.symbolType,\r\n        this.props.user\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Settings}>\r\n        <Switch\r\n          symbolType={this.props.symbolType}\r\n          handler={() => this.onCheckboxChange()}\r\n        />\r\n        <DeleteButton\r\n          activated={this.state.buttonActivated}\r\n          handler={\r\n            this.state.buttonActivated ? this.onDeleteMemory : this.onActivate\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    symbolType: state.cardGame.symbolType,\r\n    notesArray: state.cardGame.notesArray,\r\n    answers: state.cardGame.answers,\r\n    user: state.cardGame.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChangeSymbol: () => dispatch(actions.changeSymbols()),\r\n    onDelete: (user) => dispatch(actions.deleteStorageAsync(user)),\r\n    onSaveGame: (notesArray, answers, symbolType, user) =>\r\n      dispatch(actions.setStorage(notesArray, answers, symbolType, user)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\r\n"],"sourceRoot":""}